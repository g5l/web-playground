{
  "version": 3,
  "sources": ["../src/createElement.ts", "../src/render.ts", "../src/vibe.ts", "../src/index.ts"],
  "sourcesContent": ["export interface ReactElement {\n  type: string | Function;\n  props: Record<string, any>;\n  key?: string | number;\n}\n\nexport function createElement(\n  type: string | Function,\n  props: Record<string, any> | null,\n  ...children: any[]\n): ReactElement {\n  return {\n    type,\n    props: {\n      ...(props || {}),\n      children: children.flat()\n    }\n  };\n}\n\nexport function createTextElement(text) {\n  return {\n    type: \"TEXT_ELEMENT\",\n    props: {\n      nodeValue: text,\n      children: [],\n    },\n  }\n}", "// export function render(element, container) {\n//   if (typeof element === \"string\" || typeof element === \"number\") {\n//     const textNode = document.createTextNode(element);\n//     container.appendChild(textNode);\n//     return;\n//   }\n//\n//   const dom = document.createElement(element.type);\n//\n//   if (element.props) {\n//     for (const [key, value] of Object.entries(element.props)) {\n//       if (key === \"children\") continue;\n//       dom.setAttribute(key, value);\n//     }\n//   }\n//\n//   const children = element.props?.children || [];\n//   (Array.isArray(children) ? children : [children]).forEach(child =>\n//     render(child, dom)\n//   );\n//\n//   container.appendChild(dom);\n// }\n\nlet nextUnitOfWork = null\nlet currentRoot = null\nlet wipRoot = null\nlet deletions = null\n\nexport function render(element, container) {\n  wipRoot = {\n    dom: container,\n    props: {\n      children: [element],\n    },\n    alternate: currentRoot,\n  }\n  deletions = []\n  nextUnitOfWork = wipRoot\n}\n\nfunction createDom(fiber) {\n  const dom =\n    fiber.type == \"TEXT_ELEMENT\"\n      ? document.createTextNode(\"\")\n      : document.createElement(fiber.type)\n\n  updateDom(dom, {}, fiber.props)\n\n  return dom\n}\n\nconst isEvent = key => key.startsWith(\"on\")\nconst isProperty = key =>\n  key !== \"children\" && !isEvent(key)\nconst isNew = (prev, next) => key =>\n  prev[key] !== next[key]\nconst isGone = (prev, next) => key => !(key in next)\nfunction updateDom(dom, prevProps, nextProps) {\n  //Remove old or changed event listeners\n  Object.keys(prevProps)\n    .filter(isEvent)\n    .filter(\n      key =>\n        !(key in nextProps) ||\n        isNew(prevProps, nextProps)(key)\n    )\n    .forEach(name => {\n      const eventType = name\n        .toLowerCase()\n        .substring(2)\n      dom.removeEventListener(\n        eventType,\n        prevProps[name]\n      )\n    })\n\n  // Remove old properties\n  Object.keys(prevProps)\n    .filter(isProperty)\n    .filter(isGone(prevProps, nextProps))\n    .forEach(name => {\n      dom[name] = \"\"\n    })\n\n  // Set new or changed properties\n  Object.keys(nextProps)\n    .filter(isProperty)\n    .filter(isNew(prevProps, nextProps))\n    .forEach(name => {\n      dom[name] = nextProps[name]\n    })\n\n  // Add event listeners\n  Object.keys(nextProps)\n    .filter(isEvent)\n    .filter(isNew(prevProps, nextProps))\n    .forEach(name => {\n      const eventType = name\n        .toLowerCase()\n        .substring(2)\n      dom.addEventListener(\n        eventType,\n        nextProps[name]\n      )\n    })\n}\n\nfunction commitRoot() {\n  deletions.forEach(commitWork)\n  commitWork(wipRoot.child)\n  currentRoot = wipRoot\n  wipRoot = null\n}\n\nfunction commitWork(fiber) {\n  if (!fiber) {\n    return\n  }\n\n  const domParent = fiber.parent.dom\n  if (\n    fiber.effectTag === \"PLACEMENT\" &&\n    fiber.dom != null\n  ) {\n    domParent.appendChild(fiber.dom)\n  } else if (\n    fiber.effectTag === \"UPDATE\" &&\n    fiber.dom != null\n  ) {\n    updateDom(\n      fiber.dom,\n      fiber.alternate.props,\n      fiber.props\n    )\n  } else if (fiber.effectTag === \"DELETION\") {\n    domParent.removeChild(fiber.dom)\n  }\n\n  commitWork(fiber.child)\n  commitWork(fiber.sibling)\n}\n\nfunction workLoop(deadline) {\n  let shouldYield = false\n  while (nextUnitOfWork && !shouldYield) {\n    nextUnitOfWork = performUnitOfWork(\n      nextUnitOfWork\n    )\n    shouldYield = deadline.timeRemaining() < 1\n  }\n\n  if (!nextUnitOfWork && wipRoot) {\n    commitRoot()\n  }\n\n  requestIdleCallback(workLoop)\n}\n\nrequestIdleCallback(workLoop)\n\nfunction performUnitOfWork(fiber) {\n  if (!fiber.dom) {\n    fiber.dom = createDom(fiber)\n  }\n\n  const elements = fiber.props.children\n  reconcileChildren(fiber, elements)\n\n  if (fiber.child) {\n    return fiber.child\n  }\n  let nextFiber = fiber\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling\n    }\n    nextFiber = nextFiber.parent\n  }\n}\n\nfunction reconcileChildren(wipFiber, elements) {\n  let index = 0\n  let oldFiber =\n    wipFiber.alternate && wipFiber.alternate.child\n  let prevSibling = null\n\n  while (\n    index < elements.length ||\n    oldFiber != null\n    ) {\n    const element = elements[index]\n    let newFiber = null\n\n    const sameType =\n      oldFiber &&\n      element &&\n      element.type == oldFiber.type\n\n    if (sameType) {\n      newFiber = {\n        type: oldFiber.type,\n        props: element.props,\n        dom: oldFiber.dom,\n        parent: wipFiber,\n        alternate: oldFiber,\n        effectTag: \"UPDATE\",\n      }\n    }\n    if (element && !sameType) {\n      newFiber = {\n        type: element.type,\n        props: element.props,\n        dom: null,\n        parent: wipFiber,\n        alternate: null,\n        effectTag: \"PLACEMENT\",\n      }\n    }\n    if (oldFiber && !sameType) {\n      oldFiber.effectTag = \"DELETION\"\n      deletions.push(oldFiber)\n    }\n\n    if (oldFiber) {\n      oldFiber = oldFiber.sibling\n    }\n\n    if (index === 0) {\n      wipFiber.child = newFiber\n    } else if (element) {\n      prevSibling.sibling = newFiber\n    }\n\n    prevSibling = newFiber\n    index++\n  }\n}", "import {createElement} from './createElement';\nimport {render} from './render';\n\nconst Vibe = {\n  createElement,\n  render\n};\n\nexport default Vibe;", "import Vibe from './vibe';\n\nconst element = Vibe.createElement('div', {id: 'root'}, 'Hello World');\nconst container = document.getElementById(\"root\");\n\nVibe.render(element, container);"],
  "mappings": "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",
  "names": ["element", "container"]
}
